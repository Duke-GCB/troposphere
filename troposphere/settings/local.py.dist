# NOTE: This function and corresponding import will auto-generate a secret key.
# To generate a new key, just remove the 'secret_key.py' file.
def generate_secret_key(secret_key_path):
        from django.utils.crypto import get_random_string
        from datetime import datetime
        chars = 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)'
        secret_value = get_random_string(50, chars)
        comment_block = "\"\"\"\nThis file was Auto-Generated on %s\n\"\"\"\n" % datetime.now()
        with open(secret_key_path,"w") as key_file:
            key_file.write(comment_block)
            key_file.write("SECRET_KEY=\"%s\"\n" % secret_value)
try:
    from secret_key import SECRET_KEY
except ImportError:
    import os
    SETTINGS_DIR=os.path.abspath(os.path.dirname(__file__))
    generate_secret_key(os.path.join(SETTINGS_DIR, 'secret_key.py'))
    try:
        from secret_key import SECRET_KEY
    except ImportError:
        raise Exception("local.py could not generate a SECRET_KEY in secret_key.py")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

TEMPLATE_DEBUG = False
SERVER_URL = 'https://SERVERNAME'
BASE_URL = ''  # ex: "ui"

# STATIC_URL && DIRS == assets; where post-processed files go..
#STATIC_URL = '%s/assets/' % BASE_URL
#STATICFILES_DIRS = (
#        os.path.join(BASE_DIR,'assets/'),
#    )

# STATIC_ROOT must != assets
# Additionally, the folder should be empty & outside of Version Control
#STATIC_ROOT = '/tmp_static/'

ALLOWED_HOSTS = [SERVER_URL.replace("https://",""), "localhost"]



# CAS
CAS_SERVER = 'https://cas.example.com'
CAS_AUTH_PREFIX = "/your_cas_prefix"
OAUTH_CLIENT_KEY = "KEY_HERE"
OAUTH_CLIENT_SECRET = "SECRET_HERE"
OAUTH_CLIENT_CALLBACK = SERVER_URL+ "/login/oauth2.0/callbackAuthorize"

# OAUTH
OAUTH_SERVER = 'https://oauth.example.com'
OAUTH_PRIVATE_KEY_PATH = '/path/to/private.key'
OAUTH_ISS = 'your-app'
OAUTH_SCOPE = 'scope'

# MOCK - Uncomment these lines to allow one-user-only access. Useful for debug/development
# ALWAYS_AUTH_USER = "test_user"
# # Use MockLoginBackend first!
# AUTHENTICATION_BACKENDS += (
#     'troposphere.auth_backends.MockLoginBackend',
# )


# DATABASE
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "",
        "USER": "",
        "PASSWORD": "",
        "HOST": "",
        "PORT": ""
    },
}

THEME_HEADER_TEXT = 'Atmosphere'
THEME_LOGO = '/assets/images/mini_logo.png'
THEME_FAVICON = '/assets/images/favicon.ico'
THEME_CSS_FILE = '/assets/css/app/app.css'
THEME_FOOTER_TEXT = "iPlant Collaborative"
UI_VERSION = 'Hawaiian Hawk'
